DQL: Lekérdezés

SELECT megjeleno_oszlopok_neve
FROM tabla(k)
WHERE szurofeltetel(ek)
GROUP BY mezonev(ek)
HAVING szurofeltetel(ek)
ORDER BY mezonev(ek) ASC | DESC
LIMIT melyik_elemtol, darabszam;

DML: Adatok módósítása
INSERT INTO tablaNev VALUES (); - Új rekord felvétele
UPDATE tablaNev SET mit = mire WHERE feltétel ; -Meglévő adatok módosítása
DELETE FROM tablaNev WHERE feltétel ; -Adatok törlése

DDL: Adatbázis szerkezetének létrehozásának, módosítása
CREATE DATABASE dbNév; -Adatbázis létrehozása
CREATE TABLE  tablaNév ();  -Tábla létrehozása
CREATE INDEX tablaIndex ON tablaNev(mezoNev(ek)); -Indexelés
ALTER TABLE tablaNév ADD/MODIFY/DROP oszlopnév típus; -Oszlop hozzáadása vagy módosítása vagy eltávolítása
ALTER TABLE tablaNev 
    ADD FOREIGN KEY (fk) REFERENCES hivatkozottTabla(pk); -Külső kulcs hozzáadása
    ADD COLUMN mezoNev tipus [egyéb tulajdonságok]; -Új oszlop felvétele
    ADD PRIMARY KEY (kulcsmezo(k)); -Elsődleges kulcs hozzáadása

DROP DATABASE dbNév; - Adatbázis törlése
DROP TABLE tablaNév; - Tábla törlése

AGGREGÁT függvények:
COUNT(*) – A teljes sor számát ad
SUM(milyenMezo) – Minden mező értékének összegzése
MAX(melyikMezo) – A legnagyobb értéket adja vissza
MIN(melyikMezo) – A legkisebb értéket adja vissza
AVG(melyikMezo) – Az átlagot adja vissza

Dátum függvények:
YEAR()
MONTH()
DAY()
NOW()
CURRENT_DAY()
DATEDIFF()

Módosítók:
ASC – Növekvő rendezési sorrendben
DESC – Csökkenő rendezési sorrendben
FIRST – Tábla elejére teszi az új mezőt
LAST mezoNev – mezoNev után teszi az új mezőt
DISTINCT  – Egyedi értékek  megjelenitése
AUTO_INCREMENT  – Számláló

Joker karakterek:
LIKE
IN halmaz
hasonító operátorok
BETWEEN alsóhatár AND felsőhatár
CASE WHEN

Logikai operátorok:
AND
OR
NOT

Spec értékek:
NULL

Adatbázis tervezés:

Szállítmányozás:
Megrendelő(MegrendeloId(PK), Név, IrSzam, Település. UtcaHsz)

Gépkocsi(Rendszám(PK), Típus, Raktér, Hengerűrtartalom, Fogyasztás)

Áru(ÁruKódja(PK), Megnevezés, Hossz, Szélesség, Magasság, Súly, Szállítva(FK))
    Kisszálítás: Szállítva -> Szállítás(SzállításId)

Szállítás(SzállításId(PK), Dátum, Sikeres, Irszam, Település, UtcaHsz, MegrendelőId(FK))
    Megrendelés: MegrendelőId -> Megrendelő(MegrendeloId)

Használt_jármű(SzállításAzonosító(PK) (FK), GépkocsiRendszám(PK) (FK))
    SzállításAzonosító --> Szállítás(SzállításId) 
    GépkocsiRendszám --> Gépkocsi(Rendszám)

Internetes Fórum
Látogatók(LátogatásId(PK), IPcím, Év, Hónap, Nap)


Üzenetek(ÜzenetekId(PK), Kiírta, Év, Hónap, Nap, Tartalom, Témakörök)


Témakörök(Id(PK), Név)


Felhasználók(FelhasználóId(PK), Vezetéknév, Keresztnév, Jelszó)


Országos Ornitológiai Társaság Madarak
Feljegyzések(FeljegyzésId(PK), Ki_látta, Mikor_látta, Hol_látta, Melyik_madarat_látta, TagkártyaId(FK))
    TagkártyaId --> Szövetségi_tagok(Tagsági_kártya_szám)

Madár(Gyűrű_száma, Ki_gyűrűzte_meg, Hol_történt _a_gyűrűzés, Faj, Osztály, Alosztály, Rend, FeljegyzésId(FK), TagkártyaId(FK))
    FeljegyzésId --> Feljegyzések(FeljegyzésId)

Szövetségi_tagok(Tagsági_kártya_szám(PK), Név, Lakcím, Mikor_lett_tag, Meddig_tag)
    Tagsági_kártya_szám --> Feljegyzések(TagkártyaId)
    Tagsági_kártya_szám --> Madarak(TagkártyaId)

Online Szakácskönyv
Hozzávalók(HozzávalóId(PK), Név, Mennyiség)


Felhasználók(FelhasználóId(PK), Név, Jelszó )


Receptek(ReceptId(PK), Név, Feltöltés_dátuma)


Ételek(ÉtelId(PK), Név, Leírása, Elkészítési_időt, Fényképet, ReceptId(FK))
    ReceptId --> Receptek(ReceptId)

Alapanyagok(ÉtelId(FK), HozzávalóId(FK))
    ÉtelId --> Ételek(ÉtelId)
    HozzávalóId --> Hozzávalók(HozzávalóId)

ÉtelFelhasznlók(ReceptId(FK), FelhasználóId(FK))
    ReceptId --> Receptek(ReceptId)
    FelhasználóId --> Felhasználók(FelhasználóId)